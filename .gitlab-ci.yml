before_script:
  - echo Starting...
deploy_dev:
  tags:
    - shell
  only:
    - dev
  script:
    - docker build -t registry.lftechnology.com/sports:latest -f ./docker/Dockerfile .
    - docker push registry.lftechnology.com/sports:latest
    - curl -X POST --user $username:$password https://registry.lftechnology.com/deploy/dev.sports.lftechnology.com -vv
deploy_production:
  tags:
    - shell
  only:
    - master
  script:
    - docker build -t registry.lftechnology.com/sports:stable -f ./docker/Dockerfile .
    - docker push registry.lftechnology.com/sports:stable
    - curl -X POST --user $username:$password https://registry.lftechnology.com/deploy/sports.lftechnology.com
deploy_manual:
  tags:
    - shell
  script:
    - docker build -t registry.lftechnology.com/sports:latest -f ./docker/Dockerfile .
    - docker push registry.lftechnology.com/sports:latest
    - |
        RESPONSE=$(curl -s -w 'HTTP_STATUS_CODE=%{http_code}\n' POST --user $username:$password https://registry.lftechnology.com/deploy/dev.sports.lftechnology.com -vv )
        printf "\n$RESPONSE\n" 
        status_response=$(echo "$RESPONSE" | grep HTTP_STATUS_CODE= | sed -n 2p)
        status_code=(${status_response//HTTP_STATUS_CODE=/})
        if [ $status_code -eq "200" ]; then exit 0; else exit 1; fi 
        
    # - curl -X POST --user $username:$password https://registry.lftechnology.com/deploy/dev.sports.lftechnology.com
  when: manual
