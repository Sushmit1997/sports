definitions:
  LoginParams:
    title: LoginParams
    type: object
    properties:
      email:
        type: string
        description: Login email of user
      password:
        type: string
        description: Password of the user
      roleId:
        description: Role id of the user
        type: number
  Tokens:
    title: Tokens
    type: object
    properties:
      accessToken:
        type: string
        description: Access token to be used by user for authentication
      refreshToken:
        type: string
        description: Refresh token to be used for refreshing access token when it expires
  LoginResponse:
    title: LoginResponse
    type: object
    properties:
      data:
        title: LoginResponseData
        type: object
        properties:
          tokens:
            $ref: '#/definitions/Tokens'
      code:
        type: number
        description: Response code
      message:
        type: string
        description: Login result message
      status:
        type: string
        description: Response status text
  RefreshResponse:
    title: RefreshResponse
    type: object
    properties:
      data:
        title: RefreshResponseData
        type: object
        properties:
          newAccessToken:
            type: string
            description: New access token for authentication
      code:
        type: number
        description: Response code
      message:
        type: string
        description: Refersh result message
      status:
        type: string
        description: Response status text
  LogoutResponse:
    title: LogoutResponse
    type: object
    properties:
      data:
        type: object
        description: empty object
      code:
        type: number
        description: Response code
      message:
        type: string
        description: logout result message
      status:
        type: string
        description: Response status text
  Error:
    title: Error
    type: object
    properties:
      error:
        title: error
        type: object
        properties:
          code:
            type: number
            description: Http error code
          status:
            type: string
            description: Http status text
          message:
            type: string
            description: Error message
  ServerError:
    title: ServerError
    allOf:
      - $ref: '#/definitions/Error'
  ForbiddenError:
    title: ForbiddenError
    allOf:
      - $ref: '#/definitions/Error'
  UnAuthorizedError:
    title: UnAuthorizedError
    allOf:
      - $ref: '#/definitions/Error'


paths:
  /v1/auth/login:
    post:
      summary: Facilitate user login
      description: Returns tokens if login-info is valid
      produces:
        - application/json
      tags:
        - Auth
      parameters:
        - name: LoginParams
          description: POST params for login
          in: body
          required: true
          schema:
            $ref: '#/definitions/LoginParams'
      responses:
        200:
          description: LoginResponse object
          schema:
            $ref: '#/definitions/LoginResponse'
        401:
          description: Authorization Error
          schema:
            $ref: '#/definitions/UnAuthorizedError'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ServerError'

  /v1/auth/refresh:
    get:
      summary: Refresh token of logged in user
      description: Returns new access token for a valid refresh token
      produces:
        - application/json
      tags: 
        - Auth
      parameters:
        - name: refresh
          description: Refresh token to be used to get new access token
          in: header
          type: string
      responses:
        200:
          description: RefreshResponse object
          schema:
            $ref: '#/definitions/RefreshResponse'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/ForbiddenError'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ServerError'
  
  /v1/auth/logout:
    post:
      summary: Handle logout request
      description: Removes refresh token of the user from database
      produces:
        - application/json
      tags:
        - Auth
      parameters:
        - name: refresh
          description: Refresh token to be used to log out the user
          in: header
          required: true
          type: string
      responses:
        200:
          description: LogoutResponse object
          schema:
            $ref: '#/definitions/LogoutResponse'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/ForbiddenError'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/ServerError'


